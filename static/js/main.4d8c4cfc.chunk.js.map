{"version":3,"sources":["game/index.ts","components/block.tsx","components/boardMessage.tsx","components/view.tsx","App.tsx","index.tsx"],"names":["MOVES","keys","38","40","37","39","getNextHead","head","move","limit","x","y","Error","getRandomApple","width","height","Math","trunc","random","createBoard","half","min","snake","currentMove","body","apple","size","Block","styled","div","dash","SpanButton","span","Container","BoardMessage","title","btnText","onClick","style","marginTop","role","GameBoard","Header","App","props","parseInt","document","offsetWidth","offsetHeight","board","state","lastUpdate","Date","now","time","points","gameOver","inGame","start","bind","loop","handleKeyDown","this","find","e","concat","eatApple","eat","pop","nextMove","newPoints","setState","max","update","window","requestAnimationFrame","keyCode","newMove","isValidMove","addEventListener","removeEventListener","snakeMap","reduce","acc","v","i","join","view","j","match","getBoardToView","map","row","id","key","display","colId","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4d8c4cfc.chunk.js","sourcesContent":["export type Move = \"UP\" | \"DOWN\" | \"LEFT\" | \"RIGHT\";\nexport type SnakeBodyPart = [number, number];\nexport type BoardView = Array<Array<number>>\nexport type Apple = [number, number]\nexport type Snake = {\n  currentMove: Move,\n  limit: [number, number],\n  body: Array<SnakeBodyPart>\n}\n\nexport type Board = {\n  apple: Apple,\n  snake: Snake,\n  size: [number, number],\n}\n\nexport type KeyDown = {\n  keyCode: number\n}\n\nconst MOVES = {\n  UP: \"UP\",\n  LEFT: \"LEFT\",\n  RIGHT: \"RIGHT\",\n  DOWN: \"DOWN\",\n}\n\nexport const keys: Record<number, Move> = {\n  38: \"UP\",\n  40: \"DOWN\",\n  37: \"LEFT\",\n  39: \"RIGHT\"\n};\n\nconst getNextHead = (head: [number, number], move: Move, limit: [number, number]): [number, number] => {\n  const [x, y] = head;\n  if (x > limit[0] || y > limit[1] || x === -1 || y === -1)\n    throw new Error(\"Game over\");\n\n  switch (move) {\n    case MOVES.UP:\n      return [x - 1, y]\n    case MOVES.DOWN:\n      return [x + 1, y]\n    case MOVES.LEFT:\n      return [x, y - 1]\n    case MOVES.RIGHT:\n      return [x, y + 1]\n  }\n  return head;\n}\n\nexport const isValidMove = (currentMove: Move, newMove: Move): boolean => {\n  if (currentMove === newMove) return false;\n\n  switch (newMove) {\n    case MOVES.UP:\n      return currentMove !== MOVES.DOWN\n    case MOVES.DOWN:\n      return currentMove !== MOVES.UP\n    case MOVES.LEFT:\n      return currentMove !== MOVES.RIGHT\n    case MOVES.RIGHT:\n      return currentMove !== MOVES.LEFT\n  }\n  return false;\n}\n\nexport const getRandomApple = ([width, height]: [number, number]): Apple => {\n  return [Math.trunc(Math.random() * width), Math.trunc(Math.random() * height)]\n}\n\nexport const eatApple = (apple: Apple, snake: Snake): [Apple, Snake, boolean] => {\n  if (snake.body.find(e => e[0] === apple[0] && e[1] === apple[1])) {\n    const head = getNextHead(snake.body[0], snake.currentMove, snake.limit);\n    snake.body = [head].concat(snake.body);\n    return [getRandomApple(snake.limit), snake, true]\n  }\n  return [apple, snake, false];\n}\n\nexport const createBoard = (width: number, height: number): Board => {\n  const half = Math.trunc(Math.min(width, height) / 2);\n  return {\n    snake: {\n      currentMove: \"RIGHT\",\n      limit: [width, height],\n      body: [[half, half], [half, half - 1], [half, half - 2]],\n    },\n    apple: getRandomApple([width, height]),\n    size: [width, height]\n  }\n}\n\nexport const nextMove = (snake: Snake): Array<SnakeBodyPart> => {\n  const [head] = snake.body;\n  const body = [getNextHead(head, snake.currentMove, snake.limit), ...snake.body];\n  body.pop();\n  return body;\n}\n\nexport const getBoardToView = (board: Board): BoardView => {\n  const snakeMap: Record<string, number> = board.snake.body.reduce((acc, v, i) => ({ ...acc, [v.join(\"-\")]: i }), {});\n  const view: BoardView = [];\n\n  for (var i = 0; i < board.size[0]; i++) {\n    view[i] = [];\n    for (var j = 0; j < board.size[1]; j++) {\n      const match = snakeMap[`${i}-${j}`];\n\n      if (board.apple[0] === i && board.apple[1] === j) {\n        view[i][j] = 1;\n        continue;\n      }\n\n      if (match >= 0) {\n        view[i][j] = match === 0 ? -2 : -1;\n        continue;\n      }\n\n      view[i][j] = 0;\n    }\n  }\n\n  return view;\n}","import styled from \"styled-components\";\n\ntype BlockProps = {\n  snake: boolean,\n  head: boolean,\n  apple: boolean,\n  dash: boolean\n}\n\nexport const Block = styled.div<BlockProps>`\n  width: 15px;\n  height: 15px;\n  background: ${({ snake, apple, dash }) => {\n    if (snake) return \"#000\";\n    if (apple) return \"red\";\n    if (dash) return \"#a8e335\";\n    return \"#B2EE4A\";\n  }}; \n  border-radius: ${({ apple }) => (apple && \"50%\") || \"0px 0px 0px 0px\"};\n`\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst SpanButton = styled.span`\n  color: #000;\n  cursor: pointer;\n  text-decoration: underline;\n`;\n\nconst Container = styled.div`\n  position: absolute;\n  text-align: center;\n`\n\ntype BoardMessageProps = {\n  title: string,\n  btnText: string,\n  onClick: Function\n}\n\nexport const BoardMessage = ({ title, btnText, onClick }: BoardMessageProps) => (\n  <Container>\n    <h1 style={{ marginTop: 0 }}>{title}</h1>\n    <SpanButton onClick={() => onClick()} role=\"button\">{btnText}</SpanButton>\n  </Container>\n)","import styled from \"styled-components\";\n\nexport const GameBoard = styled.div`\n  display: flex;\n  margin: 20px;\n  border: 4px solid #000; \n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n\ntype HeaderProps = {\n  width: number\n}\n\nexport const Header = styled.div<HeaderProps>`\n  width: ${({ width }) => (width * 15.11)}px;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 4px solid #000;\n`;","import React from 'react';\nimport { createBoard, eatApple, getBoardToView, nextMove, keys, isValidMove } from \"./game\"\nimport { Move, Board, KeyDown } from \"./game\";\nimport { Block, GameBoard, BoardMessage, Header, Container } from \"./components/index\"\n\ntype AppState = {\n  board: Board,\n  lastUpdate: number,\n  time: number,\n  points: number,\n  gameOver: boolean,\n  inGame: boolean,\n}\n\nclass App extends React.Component<{}, AppState> {\n  width: number;\n  height: number;\n\n  constructor(props: Object) {\n    super(props);\n\n    this.width = parseInt(`${(document.body.offsetWidth - 60) / 2 / 15}`);\n    this.height = parseInt(`${(document.body.offsetHeight - 60) / 2 / 15}`);\n    const board: Board = createBoard(this.height, this.width);\n\n    this.state = {\n      board,\n      lastUpdate: Date.now(),\n      time: 80,\n      points: 0,\n      gameOver: false,\n      inGame: false\n    };\n\n    this.start = this.start.bind(this);\n    this.loop = this.loop.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  update(move?: Move) {\n    const { board, points } = this.state;\n\n    try {\n      const [apple, snake, eat] = eatApple(board.apple, board.snake);\n      board.snake.body = nextMove(snake);\n      board.snake.currentMove = move || board.snake.currentMove;\n      board.apple = apple;\n      const newPoints = eat ? points + 10 : points;\n\n      this.setState({\n        board,\n        lastUpdate: Date.now(),\n        points: newPoints,\n        time: Math.max(50, 80 - (newPoints / 5))\n      });\n    } catch (e) {\n      this.setState({ gameOver: true, lastUpdate: Date.now(), points: 0, time: 80 });\n    }\n  }\n\n  loop() {\n    const { lastUpdate, time, gameOver } = this.state;\n    if (Date.now() - lastUpdate >= time) {\n      this.update();\n    }\n\n    if (gameOver) return;\n\n    window.requestAnimationFrame(this.loop);\n  }\n\n  handleKeyDown(e: KeyDown) {\n    const { board } = this.state;\n    const move = keys[e.keyCode];\n    if (isValidMove(board.snake.currentMove, move)) {\n      this.update(move)\n    }\n  }\n\n  start() {\n    const board: Board = createBoard(this.height, this.width);\n    this.setState({ board, gameOver: false, inGame: true }, () => {\n      this.loop();\n    })\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown)\n  }\n\n  render() {\n    const { board, points, time, gameOver, inGame } = this.state;\n    return (\n      <Container>\n        <Header width={this.width}>\n          <p>Pontos: <b>{points}</b></p>\n          <p>Time: <b>{time}</b></p>\n        </Header>\n\n        <GameBoard>\n          {!inGame && (\n            <BoardMessage title={\"SNAKE GAME\"} btnText={\"Start\"} onClick={this.start} />\n          )}\n\n          {gameOver && (\n            <BoardMessage title={\"GAME OVER\"} btnText={\"New Game\"} onClick={this.start} />\n          )}\n\n          {getBoardToView(board).map((row, id) => {\n            return (\n              <div key={`row-${id}`} style={{ display: \"flex\" }}>\n                {row.map((e, colId) => <Block\n                  key={`col-${id}-${colId}`}\n                  snake={e < 0}\n                  head={e < -1}\n                  dash={id % 2 === 0 ? colId % 2 === 0 : colId % 2 !== 0}\n                  apple={e === 1} />)}\n              </div>\n            )\n          })}\n        </GameBoard>\n      </Container>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}